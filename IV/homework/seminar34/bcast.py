#Kоллективное взаимодействие через широковещательный обмен - функция Bcast, при помощи функции разброса scatter,
#при помощи функции получения gatherBcast Выполнить задание по вариантам:
#Вариант 1: Напишите программу на Python, используя модуль mpi4py, которая создает словарь данных на процессе с
#рангом 0 и затем распространяет эти данные на все остальные процессы с помощью функции comm.bcast. Словарь должен содержать два ключа: 
#‘key1’ и ‘key2’. ‘key1’ должен быть связан со списком, содержащим три элемента: целое число, вещественное число и комплексное число.
#‘key2’ должен быть связан с кортежем, содержащим две строки. После получения данных каждый процесс должен выводить свой ранг и полученные данные.

#  mpirun -n 4 python3 bcast.py (Если будет ругаться, пропишите путь к файлу в команде)

from mpi4py import MPI

comm = MPI.COMM_WORLD #коммуникатор (Стартовая область связи)
size = comm.Get_size() #Размер (-n 4)
rank = comm.Get_rank() #Ранг(порядковый номер)

if rank == 0: 
    data = {'key1':[1,1.5,1+2*size],
            'key2':('Привет','Мир')}
else:
    data = None

data = comm.bcast(data, root=0) #root = из какого ранга

#без bcast

# if rank == 0: 
#     data = {'key1':[1,1.5,1+2*size],
#             'key2':('Привет','Мир')}
#     for i in range(1,size):
#         comm.send(data,dest=i)
# else:
#     data = comm.recv(source=0) #из rank 0


if __name__ =="__main__":
    print(f"rank : {rank}\ndata : {data}")