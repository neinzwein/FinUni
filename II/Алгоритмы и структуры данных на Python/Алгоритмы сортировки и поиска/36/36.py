# Имеется стопка оладий. Необходимо сделать из них правильную стопку: каждая оладья должна быть не больше всех оладий, находящихся под нею.
# Все оладьи круглые, поэтому размер оладьи определяется ее диаметром.

# Сортировка стопки осуществляется серией “переворотов” оладий. 
# Переворот заключается в том, что вы помещаете лопатку между двумя оладьями и переворачиваете всю стопку, оказавшуюся на лопатке, то есть меняете порядок следования оладий над лопаткой на обратный.

# Стопка определяется заданием диаметра каждой оладьи в стопке в порядке следования (сверху вниз).
# Переворачивание определяется количеством оладий, которое переворачивается. Например, из стопки 7 3 9 1 5 переворачиванием трех оладий получится стопка 9 3 7 1 5.

# Вам дана стопка оладий, выведите последовательность переворачиваний (то есть количество оладий, которое нужно переворачивать за один раз), сортирующую данную стопку.

# Первая строка входных данных содержит натуральное число N (1≤N≤1000) — количество оладий в стопке.
#                                                             Далее идет N натуральных чисел, не превосходящих 109 — размеры оладий в стопке (сверху вниз).

# Программа должна вывести последовательность натуральных чисел, не превосходящих N, соответствующую количеству оладий, которое необходимо переворачивать для правильной сортировки стопки.




def Find_max_index(stock:list[int],current_index:int=0)->int:

    max,idx = 0,0

    for i in range(current_index,len(stock)):

        if stock[i] > max:
            max = stock[i]
            idx = i
    
    return idx

def flip(stock:list[int],idx:int,current_idx)->list[int]:

    start = current_idx

    while start<=idx:

        stock[start],stock[idx] = stock[idx],stock[start]

        start+=1
        idx-=1

    return stock 

def pancake_sort(stock:list[int],n:int)->list[int]:

    # count = 0

    for idx in range(0,n):
        current_max = Find_max_index(stock,idx)

        print(f"Нужно перевернуть  {len(stock[idx:current_max+1:])} оладий")

        flip(stock,current_max,idx)
        # count+=1

    # print(f"{count} раз")

    return stock

N = 5
stock = [7,3,9,1,5]

# N = int(input())

# for i in range(N):
#     stock = int(input())

print(stock)

pancake_sort(stock,N)
print(stock)